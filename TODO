0. Строгий рефакторинг имеющегося кода до версии 1.0 после чего все остальное в версии 2
1. Дополнительный асинхронный метод проверки Version
2. Файл(текст) описания обновлений для показа пользователю, перед обновлением
3. Загружаемые элементы должны иметь хеш для проверки корректности загрузки и проверки уже загруженных файлов.
4. Проверка файлов перед загрузкой через хеш. Downloader сравнивает размеры, нужно еще проверть хеш если размеры совпали(чтобы исключить ошибки передачи по сети и изменения файлов без изменения версии на сервере)
5.Event-driven, избавиться от листнера при обновлении. Сделать возможность исполнять код по окончанию загрузки файлов в потоке определяемым юзером
6.TaskCreator должен принимать стратегии. не нужно плодить подклассы, по факту сбивает пользователя.
7. App starter. Можно назначать дизайн, кнопки, доп инфу итп + он что-то может брать с сервера. Он интегрирует все процесы обновления
Нужно только задать параметры. необходима гибкость + встраивоемость кода в процесс выполнения. Как вариант мы можем проверить обновление и скачать, далее перезапуститься и установить из лаучера.
8. Возможность на архивы ставить пароль
9. Rest апи обновления, классы для работы с ним + приложение с настройками,
которое может сходу быть сервером обновлений с
панелью администрирования(без базы, мб встраиваемая, основные настройки в файлах). Для сервера удобный для интеграции микросервис(набор)
10. Возможность работать через https
11. Вебинсталлер - позволяет устанавливать приложение и потом его обновлять с сервера.
12  бекап заменяемых файлов + лог действий с возможностью отмены!(возможность отмены подразумевает бекап заменяемых файлов) Отмена при ошибке при выполении операций обновления
13. AddToArch action
14. Проверка целостности файлов программы со списком передаваемым с сервера